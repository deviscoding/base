
// region ///////////////////////////////////////////////////////////////   Getter Functions

@function breakpoint($breakpoint) {
  @if map-has-key($grid-breakpoints,$breakpoint) {
    @return map-get($grid-breakpoints, $breakpoint);
  }

  @error "The breakpoint `#{$breakpoint} does not exist in the $grid-breakpoints map.";
}

@function container($breakpoint) {
  @if map-has-key($container-max-widths,$breakpoint) {
    @return map-get($container-max-widths, $breakpoint);
  }

  @error "The breakpoint `#{$breakpoint} does not exist in the $container-max-widths map.";
}

/// Constant Getter - Credit to https://twitter.com/HugoGiraudel
///
/// @param    {String} $name          Name of constant to get
///
/// @return   {*}                     Constant value
/// @require            $CONSTANTS
/// @throw    'Unknown constant `#{$name}`.'
@function const($name) {
  @if not map-has-key($CONSTANTS, $name) {
    @error 'Unknown constant `#{$name}`.';
  }

  @return map-get($CONSTANTS, $name);
}

@function feature($key) {
  @if map-has-key($features,$key) {
    @return map-get($features,$key);
  }

  @error "The feature `#{$key}` does not exist in the $features map.";
}


// endregion ////////////////////////////////////////////////////////////   End Getter Functions

// region ///////////////////////////////////////////////////////////////   Setter Functions

@function set-feature($key,$value) {
  @return set-map-key($features,$key,$value);
}

@function set-breakpoint($breakpoint,$value) {
  @return set-map-key($grid-breakpoints,$breakpoint,$value);
}

@function set-max-width($breakpoint,$value) {
  @return set-map-key($container-max-widths,$breakpoint,$value);
}

// endregion ////////////////////////////////////////////////////////////   End Setter Functions
