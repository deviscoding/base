
@import "variables/root-variables";
@import "variables/theme-variables";
@import "functions/getset";

// region ///////////////////////////////////////////////////////////////   Material Design Shadows

@mixin elevation($level) {
  @if theme(shadows) {
    $umbra: 0;
    $penumbra: 0;
    $ambient: 0;
    @if $level > 0 {
      @if $level == 1 {
        $umbra:    0 2px 1px -1px;
        $penumbra: 0 1px 1px 0;
        $ambient:  0 1px 3px 0;
      }
      @else if $level == 2 {
        $umbra:    0 3px 1px -2px;
        $penumbra: 0 2px 2px 0;
        $ambient:  0 1px 5px 0;
      }
      @else if $level == 3 {
        $umbra:    0 3px 3px -2px;
        $penumbra: 0 3px 4px 0;
        $ambient:  0 1px 8px 0;
      }
      @else if $level == 4 {
        $umbra:    0 2px 4px -1px;
        $penumbra: 0 4px 5px 0;
        $ambient:  0 1px 10px 0;
      }
      @else if $level == 6 {
        $umbra:    0 3px 5px -1px;
        $penumbra: 0 6px 10px 0;
        $ambient:  0 1px 18px 0;
      }
      @else if $level == 8 {
        $umbra:    0 5px 5px -3px;
        $penumbra: 0 8px 10px 1px;
        $ambient:  0 3px 14px 2px;
      }
      @else if $level == 16 {
        $umbra:    0 8px 10px -5px;
        $penumbra: 0 16px 24px 2px;
        $ambient:  0 6px 30px 5px;
      }
      @else if $level == 24 {
        $umbra: 0 24px 38px 3px;
        $penumbra: 0 9px 46px 8px;
        $ambient: 0 11px 15px -7px;
      }
      @else {
        @error $level;
      }

      @debug $level;

      $umbra-color: rgba(0,0,0, $shadow-key-umbra-opacity);
      $penumbra-color: rgba(0,0,0, $shadow-key-penumbra-opacity);
      $ambient-color: rgba(0,0,0, $shadow-ambient-shadow-opacity);

      box-shadow: $umbra $umbra-color, $penumbra $penumbra-color, $ambient $ambient-color;
    } @else {
      box-shadow: none;
    }
  }
}

// endregion ////////////////////////////////////////////////////////////   End Material Design Shadows

// region ///////////////////////////////////////////////////////////////   Other

// Adds the proper rules for truncating text.  Note that the selector this mixin is used
// for must be a 'block' type (flex, block, inline-block, etc).
@mixin truncate($maxWidth: 100%, $isFlex: false) {
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: $maxWidth;
  white-space: nowrap;
  @if($isFlex) {
    //noinspection CssInvalidPropertyValue
    -ms-flex-wrap: none;
    flex-wrap: nowrap;
  }
}

// endregion ////////////////////////////////////////////////////////////   End Other